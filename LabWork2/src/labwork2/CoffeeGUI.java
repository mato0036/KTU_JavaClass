package labwork2;

import java.awt.Desktop;
import java.io.File;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mjancek
 */
public class CoffeeGUI extends javax.swing.JFrame{

    SpecialArray test = new SpecialArray();
    ArrayList<Coffee> newCoffee = new ArrayList<>();
    
    
    /**
     * Creates new form CoffeeGUI
     */
    public CoffeeGUI(){
        initComponents();
        
        saveFile.setEnabled(false);
        createNewList.setEnabled(false);
        sort.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jMenuBar3 = new javax.swing.JMenuBar();
        file = new javax.swing.JMenu();
        readFile = new javax.swing.JMenuItem();
        saveFile = new javax.swing.JMenuItem();
        exit = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        createNewList = new javax.swing.JMenuItem();
        sort = new javax.swing.JMenuItem();
        HelpPar = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();
        help = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textArea.setColumns(20);
        textArea.setRows(5);
        jScrollPane1.setViewportView(textArea);

        file.setText("File");

        readFile.setText("Read file");
        readFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuReadFileActionPerformed(evt);
            }
        });
        file.add(readFile);

        saveFile.setText("Save file");
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });
        file.add(saveFile);

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        file.add(exit);

        jMenuBar3.add(file);

        edit.setText("Edit");

        createNewList.setText("Create new list");
        createNewList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createNewListActionPerformed(evt);
            }
        });
        edit.add(createNewList);

        sort.setText("Sort");
        sort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortActionPerformed(evt);
            }
        });
        edit.add(sort);

        jMenuBar3.add(edit);

        HelpPar.setText("Help");

        about.setText("About");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        HelpPar.add(about);

        help.setText("Help");
        help.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpActionPerformed(evt);
            }
        });
        HelpPar.add(help);

        jMenuBar3.add(HelpPar);

        setJMenuBar(jMenuBar3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuReadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuReadFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser(".");
        int returnVal = fc.showOpenDialog(null);
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();          
            test.fillFromFile(file, textArea);
            textArea.append("\n\tList of cofee:\n");
            textArea.append(test.toString());
            createNewList.setEnabled(true);
            sort.setEnabled(true);
        }

        
    }//GEN-LAST:event_jMenuReadFileActionPerformed

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
        // TODO add your handling code here:
        
        JFileChooser fc = new JFileChooser(".");
        int returnVal = fc.showSaveDialog(null);
        if(returnVal == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile();
            test.saveFile(file, newCoffee, textArea);
            JOptionPane.showMessageDialog(this, "List successfully saved in the file");
        }
        
    }//GEN-LAST:event_saveFileActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        // TODO add your handling code here:
        
        System.exit(0);
        
    }//GEN-LAST:event_exitActionPerformed

    private void createNewListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createNewListActionPerformed
        // TODO add your handling code here:
        
        String origin = JOptionPane.showInputDialog(this, "Enter origin of coffee to be copied to new list", "Origin", JOptionPane.WARNING_MESSAGE);
        
        if(!newCoffee.isEmpty()){
            newCoffee.clear();            
        }
        
        test.newCoffee(newCoffee, origin);
        if(newCoffee.size() > 0){
            saveFile.setEnabled(true);
            textArea.append("\n\tList of coffee from " + origin + "\n");
            for(Coffee one : test.listCoffee){
                textArea.append(one.toString() + "\n");
            }
            
        }else{
            JOptionPane.showMessageDialog(this, "No coffee from " + origin + "\n");
        }         
    }//GEN-LAST:event_createNewListActionPerformed

    private void sortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortActionPerformed
        // TODO add your handling code here:
        
        test.sortByScoreAndYear();
        textArea.append(("\nSorted list of coffee by score and year:\n"));
        for(Coffee one : test.listCoffee){
            textArea.append(one.toString() + "\n");
        }
        
    }//GEN-LAST:event_sortActionPerformed

    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
        // TODO add your handling code here:
        
        File file = new File("./dist/javadoc/index.html");
        
        try{
            Desktop.getDesktop().open(file);
        } catch(Exception e){
            JOptionPane.showMessageDialog(this, "Unsuccessfull opening of documentation");
        }
        
    }//GEN-LAST:event_helpActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        // TODO add your handling code here:
        
        JOptionPane.showMessageDialog(this, "Programm for laboratoy work 2, Programming with Java\nAuthor: Matej Janƒçek\nFor opening JavaDoc, click on Help menu.");
        
    }//GEN-LAST:event_aboutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try{
            for(javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()){
                if("Nimbus".equals(info.getName())){
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch(ClassNotFoundException ex){
            java.util.logging.Logger.getLogger(CoffeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch(InstantiationException ex){
            java.util.logging.Logger.getLogger(CoffeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch(IllegalAccessException ex){
            java.util.logging.Logger.getLogger(CoffeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch(javax.swing.UnsupportedLookAndFeelException ex){
            java.util.logging.Logger.getLogger(CoffeeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable(){

            public void run(){
                new CoffeeGUI().setVisible(true);
            }

        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu HelpPar;
    private javax.swing.JMenuItem about;
    private javax.swing.JMenuItem createNewList;
    private javax.swing.JMenu edit;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu file;
    private javax.swing.JMenuItem help;
    private javax.swing.JMenuBar jMenuBar3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem readFile;
    private javax.swing.JMenuItem saveFile;
    private javax.swing.JMenuItem sort;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
